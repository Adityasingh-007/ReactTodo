import { createSlice, nanoid } from "@reduxjs/toolkit";

const initialState = {
                        todos: [{ id: 1, text: "hello world" }]
                     }

export const todoSlice = createSlice({

    name: 'todoSlice',
    initialState,
    reducers: {

        addTodo: (state, action) => {
            const todo = {
                id: nanoid(),
                text: action.payload
            }

            state.todos.push(todo);
        },

        removeTodo: (state, action) => {  //action.payload is the additional data you pass with an action to a reducer.
            state.todos = state.todos.filter((todo) => (todo.id !== action.payload));
        }
    }

})

export const{addTodo,removeTodo}=todoSlice.actions

export default todoSlice.reducer //This exports the reducer function generated by createSlice, which is then used to update the state in the Redux store when the corresponding actions are dispatched.

// In your case, createSlice internally generates the reducer function that handles each action (addTodo,removetodo) you defined in the reducers field.
// So, counterSlice.reducer is the automatically generated reducer function that knows how to handle all the actions for this slice of state (addTodo,removetodo).

